name: "[internal] ttnn unit tests impl"

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      runner-label:
        required: true
        type: string
      timeout:
        required: false
        type: number
        default: 45
  workflow_dispatch:
    inputs:
      arch:
        required: true
        type: choice
        options:
          - grayskull
          - wormhole_b0
          - blackhole
      runner-label:
        required: true
        type: choice
        options:
          - E150
          - N150
          - N300
          - BH
      timeout:
        required: false
        type: number
        default: 45

jobs:
  ttnn:
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04"]
        test-group:
          - name: ttnn group 1
            cmd: pytest tests/ttnn/unit_tests -xv --splits 10 --group 1 -m "not disable_fast_runtime_mode"
          - name: ttnn group 2
            cmd: pytest tests/ttnn/unit_tests -xv --splits 10 --group 2 -m "not disable_fast_runtime_mode"
          - name: ttnn group 3
            cmd: pytest tests/ttnn/unit_tests -xv --splits 10 --group 3 -m "not disable_fast_runtime_mode"
          - name: ttnn group 4
            cmd: pytest tests/ttnn/unit_tests -xv --splits 10 --group 4 -m "not disable_fast_runtime_mode"
          - name: ttnn group 5
            cmd: pytest tests/ttnn/unit_tests -xv --splits 10 --group 5 -m "not disable_fast_runtime_mode"
          - name: ttnn group 6
            cmd: pytest tests/ttnn/unit_tests -xv --splits 10 --group 6 -m "not disable_fast_runtime_mode"
          - name: ttnn group 7
            cmd: pytest tests/ttnn/unit_tests -xv --splits 10 --group 7 -m "not disable_fast_runtime_mode"
          - name: ttnn group 8
            cmd: pytest tests/ttnn/unit_tests -xv --splits 10 --group 8 -m "not disable_fast_runtime_mode"
          - name: ttnn group 9
            cmd: pytest tests/ttnn/unit_tests -xv --splits 10 --group 9 -m "not disable_fast_runtime_mode"
          - name: ttnn group 10
            cmd: pytest tests/ttnn/unit_tests -xv --splits 10 --group 10 -m "not disable_fast_runtime_mode"
          - name: ttnn fast runtime off
            cmd: pytest tests/ttnn/unit_tests -xv -m requires_fast_runtime_mode_off
            fast_runtime_mode_off: true
          - name: ttnn example tests
            cmd: ./tests/scripts/run_ttnn_examples.sh
    name: ${{ matrix.test-group.name }} ${{ inputs.arch }} ${{ inputs.runner-label }}
    env:
      LOGURU_LEVEL: INFO
    runs-on:
      - ${{ inputs.runner-label }}
      - "in-service"
    steps:
      - uses: tenstorrent/tt-metal/.github/actions/checkout-with-submodule-lfs@main
      - uses: actions/download-artifact@v4
        with:
          name: eager-dist-${{ matrix.os }}-any
      - name: Set ttnn fast runtime if exists in config
        if: ${{ matrix.test-group.fast_runtime_mode_off }}
        run: |
          echo "TTNN_CONFIG_OVERRIDES={\"enable_fast_runtime_mode\": false}" >> $GITHUB_ENV
      - name: ${{ matrix.test-group.name }} tests
        timeout-minutes: ${{ inputs.timeout }}
        uses: ./.github/actions/docker-run
        with:
          docker_username: ${{ github.actor }}
          docker_password: ${{ secrets.GITHUB_TOKEN }}
          docker_opts: |
            -e ARCH_NAME=${{ inputs.arch }}
          run_args: |
            WHEEL_FILENAME=$(ls -1 *.whl)
            pip3 install --user $WHEEL_FILENAME
            ${{ matrix.test-group.cmd }}
      - uses: ./.github/actions/slack-report
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: U06CXU895AP # Michael Chiou
      - uses: ./.github/actions/upload-artifact-with-job-uuid
        if: ${{ !cancelled() }}
        with:
          path: |
            generated/test_reports/
          prefix: "test_reports_"
