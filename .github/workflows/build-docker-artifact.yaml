name: "Build tt-metal docker artifact"

on:
  workflow_call:
    inputs:
      os:
        required: false
        type: string
        default: "ubuntu-20.04-amd64"
  workflow_dispatch:
    inputs:
      os:
        required: false
        type: choice
        default: "ubuntu-20.04-amd64"
        options:
            - "ubuntu-20.04-amd64"
            - "ubuntu-22.04-amd64"
jobs:
  build-docker-image:
    name: "üê≥Ô∏è Build ${{ inputs.os }} image"
    env:
      TT_METAL_ENV: ${{ vars.TT_METAL_ENV }}
      CONFIG: ci
      SILENT: 0
      VERBOSE: 1
      TT_METAL_DOCKER_IMAGE: ${{ inputs.os }}
      IMAGE: tt-metalium/ubuntu-20.04-amd64
      DOCKERFILE: ubuntu-20.04-amd64
    runs-on:
      - build-docker
      - in-service
    steps:
      - uses: tenstorrent/tt-metal/.github/actions/checkout-with-submodule-lfs@main
        with:
          fetch-depth: 0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get all test, doc and src files that have changed
        id: changed-files-specific
        uses: tj-actions/changed-files@v45
        with:
          files: |
              dockerfile/**.Dockerfile
              scripts/docker/install_test_deps.sh
              scripts/docker/requirements*
              pyproject.toml
              tt_metal/python_env/requirements-dev.txt
          base_sha: 'main'
      - name: Determine docker image tag
        uses: ./.github/actions/generate-docker-tag
        with:
          image: tt-metalium/${{ inputs.os }}
      - name: Build Docker image and push to GHCR
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}
          file: dockerfile/${{ inputs.os }}.Dockerfile
          push: true
          tags: ${{ env.TT_METAL_DOCKER_IMAGE_TAG}}
          cache-from: type=registry,ref=${{ env.TT_METAL_REF_IMAGE_TAG }}
          cache-to: type=inline
          pull: true
      - name: Tag Docker main image as current image
        if: steps.changed-files-specific.outputs.any_changed != 'true'
        run: |
          docker pull ghcr.io/${{ github.repository }}/tt-metalium/${{ env.TT_METAL_DOCKER_IMAGE }}:latest
          docker tag ghcr.io/${{ github.repository }}/tt-metalium/${{ env.TT_METAL_DOCKER_IMAGE }}:latest ${{ env.TT_METAL_DOCKER_IMAGE_TAG}}
      - name: Push Docker image to GitHub Container Registry
        run: |
          docker push ${{ env.TT_METAL_DOCKER_IMAGE_TAG }}
